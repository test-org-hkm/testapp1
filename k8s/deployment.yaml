apiVersion: apps/v1
kind: Deployment
metadata:
  name: testapp1
  namespace: utils
spec:
  replicas: 2
  selector:
    matchLabels:
      app: testapp1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: testapp1
    spec:
      containers:
      - env:
        - name: DOMAIN_NAME
          value: null
        - name: REDIS_HOST
          value: redis-master.default.svc.cluster.local
        - name: REDIS_PORT
          value: '6379'
        - name: POSTGRES_HOST
          value: postgres.default.svc.cluster.local
        - name: POSTGRES_PORT
          value: '5432'
        - name: POSTGRES_DB
          value: application
        envFrom:
        - secretRef:
            name: testapp1-secret
        image: 147728078333.dkr.ecr.ap-south-1.amazonaws.com/testapp1:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        name: testapp1
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
