name: Build and Deploy
'on':
  push:
    branches:
    - main
env:
  API_BASE_URL: ${{ secrets.API_BASE_URL }}
  APP_NAME: testapp1
  NAMESPACE: utils
  AWS_REGION: ap-south-1
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build and push Docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: "|\n          docker build -t $ECR_REGISTRY/${{ github.event.repository.name\
        \ }}:$IMAGE_TAG .\n          docker push $ECR_REGISTRY/${{ github.event.repository.name\
        \ }}:$IMAGE_TAG\n          echo \"image=$ECR_REGISTRY/${{ github.event.repository.name\
        \ }}:$IMAGE_TAG\" >> $GITHUB_OUTPUT"
    - name: Check if deployment exists via API
      id: check-deployment
      run: "|\n          RESPONSE=$(curl -s -X GET -H \"Content-Type: application/json\"\
        \ -H \"Authorization: Bearer ${{ secrets.API_TOKEN }}\" \"${{ env.API_BASE_URL\
        \ }}/api/deployment/exists?name=${{ env.APP_NAME }}&namespace=${{ env.NAMESPACE\
        \ }}\")\n          EXISTS=$(echo $RESPONSE | jq -r '.exists')\n          echo\
        \ \"exists=$EXISTS\" >> $GITHUB_OUTPUT\n          echo \"Deployment exists:\
        \ $EXISTS\""
    - name: Call API to patch deployment
      if: steps.check-deployment.outputs.exists == 'true'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: "|\n          curl -X POST -H \"Content-Type: application/json\" -H \"\
        Authorization: Bearer ${{ secrets.API_TOKEN }}\" -d \"{\\\"deployment\\\"\
        : \\\"${{ env.APP_NAME }}\\\", \\\"namespace\\\": \\\"${{ env.NAMESPACE }}\\\
        \", \\\"image\\\": \\\"$ECR_REGISTRY/${{ github.event.repository.name }}:$IMAGE_TAG\\\
        \"}\" ${{ env.API_BASE_URL }}/api/deployment/patch"
    - name: Apply K8s files via API if deployment doesn't exist
      if: steps.check-deployment.outputs.exists == 'false'
      run: "|\n          DEPLOYMENT_YAML=$(cat k8s/deployment.yaml | base64 -w 0)\n\
        \          SECRET_YAML=$(cat k8s/secret.yaml | base64 -w 0)\n          SERVICE_YAML=$(cat\
        \ k8s/service.yaml | base64 -w 0)\n          curl -X POST -H \"Content-Type:\
        \ application/json\" -H \"Authorization: Bearer ${{ secrets.API_TOKEN }}\"\
        \ -d \"{\\\"files\\\":[{\\\"name\\\":\\\"deployment.yaml\\\",\\\"content\\\
        \":\\\"$DEPLOYMENT_YAML\\\"},{\\\"name\\\":\\\"secret.yaml\\\",\\\"content\\\
        \":\\\"$SECRET_YAML\\\"},{\\\"name\\\":\\\"service.yaml\\\",\\\"content\\\"\
        :\\\"$SERVICE_YAML\\\"}]}\" ${{ env.API_BASE_URL }}/api/deployment/apply"
